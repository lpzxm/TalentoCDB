generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Jugador {
  id                    Int                     @id @default(autoincrement())
  email                 String                  @unique
  password              String                  @unique
  nombres               String
  apellidos             String
  birthDay              DateTime
  codigo                Int                     @unique
  grado                 String
  seccion               String
  createdAt             DateTime                @default(now())
  status_img_academic   String?
  status_img_behaviour  String?
  status_main_sport     String?
  category_assist       Category_Assist[]
  categories_joined     Category_players[]
  Observaciones_Jugador Observaciones_Jugador[]
  rubric_scores         Rubric_Score_player[]
}

model Category_Assist {
  id           Int            @id @default(autoincrement())
  id_categoria Int
  id_jugador   Int
  createdAt    DateTime       @default(now())
  categoria    Category_sport @relation(fields: [id_categoria], references: [id], onDelete: Cascade)
  jugador      Jugador        @relation(fields: [id_jugador], references: [id], onDelete: Cascade)
}

model Coach {
  id                       Int                        @id @default(autoincrement())
  email                    String                     @unique
  password                 String                     @unique
  nombres                  String
  birthDay                 DateTime
  id_sport                 Int
  descripcion              String                     @default("")
  cloudinary_id            String                     @default("")
  url                      String                     @default("")
  sport                    Sport                      @relation(fields: [id_sport], references: [id], onDelete: Cascade)
  Observaciones_Entrenador Observaciones_Entrenador[]
}

model Sport {
  id            Int              @id @default(autoincrement())
  name          String
  cloudinary_id String           @default("")
  url           String           @default("")
  categories    Category_sport[]
  coach         Coach[]
  rubricFields  Rubric_fields[]
}

model Category_sport {
  id              Int                @id @default(autoincrement())
  id_sport        Int
  img             String
  name            String
  rules           String
  players_assists Category_Assist[]
  players         Category_players[]
  sport           Sport              @relation(fields: [id_sport], references: [id], onDelete: Cascade)
}

model Category_players {
  id          Int            @id @default(autoincrement())
  id_player   Int
  id_category Int
  category    Category_sport @relation(fields: [id_category], references: [id], onDelete: Cascade)
  player      Jugador        @relation(fields: [id_player], references: [id], onDelete: Cascade)
}

model Rubric_fields {
  id             Int                   @id @default(autoincrement())
  description    String
  max_score      Int
  name           String
  id_sport       Int
  scores_players Rubric_Score_player[]
  sport          Sport                 @relation(fields: [id_sport], references: [id], onDelete: Cascade)
}

model Rubric_Score_player {
  id              Int           @id @default(autoincrement())
  score           Int
  id_player       Int
  id_rubric_field Int
  player          Jugador       @relation(fields: [id_player], references: [id], onDelete: Cascade)
  rubric          Rubric_fields @relation(fields: [id_rubric_field], references: [id], onDelete: Cascade)
}

model Admin {
  id        Int    @id @default(autoincrement())
  name      String
  lastnames String
  email     String @unique
  password  String @unique
}

model Observaciones_Jugador {
  id          Int     @id @default(autoincrement())
  id_atleta   Int
  observacion String
  atleta      Jugador @relation(fields: [id_atleta], references: [id], onDelete: Cascade)
}

model Observaciones_Entrenador {
  id            Int    @id @default(autoincrement())
  id_entrenador Int
  observacion   String
  Coach         Coach  @relation(fields: [id_entrenador], references: [id], onDelete: Cascade)
}
